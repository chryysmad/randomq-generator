
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer 


from pathlib import Path
import tkinter as tk
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Radiobutton, StringVar
from build.wrongs import WrongsPage
from build.randomizer import RandomizerPage


class CorrectPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        self.configure(bg="#F5F5F5")

        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path(r"/home/chrysmad/randomq-generator/build/assets/frame2")

        def relative_to_assets(path: str) -> Path:
            return ASSETS_PATH / Path(path)

        canvas = tk.Canvas(
            self,
            bg="#F5F5F5",
            height=547,
            width=994,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )
        canvas.place(x=0, y=0)
        canvas.create_text(
            24.0,
            87.0,
            anchor="nw",
            text="Correct Answer",
            fill="#1E1E1E",
            font=("Inter", 20 * -1)
        )

        canvas.create_text(
            24.0,
            123.0,
            anchor="nw",
            text="The correct answer can either be generated by the program or computed given a specific function.",
            fill="#757575",
            font=("Inter", 16 * -1)
        )

        canvas.create_text(
            24.0,
            145.0,
            anchor="nw",
            text="Choose between the two.",
            fill="#757575",
            font=("Inter", 16 * -1)
        )

        radio_value = tk.StringVar(value="auto")

        font_setting = ("Inter", 16 * -1)

        radio_auto = tk.Radiobutton(
            self,
            text="Auto Calculate",
            variable=radio_value,
            value="auto",
            bg="#F5F5F5",
            font=font_setting
        )
        radio_auto.place(x=305.0, y=211.0)

        radio_function = tk.Radiobutton(
            self,
            text="Function Calculation",
            variable=radio_value,
            value="function",
            bg="#F5F5F5",
            font=font_setting
        )
        radio_function.place(x=503.0, y=211.0)

        canvas.create_text(
            174.0,
            333.0,
            anchor="nw",
            text="Function:",
            fill="#1E1E1E",
            font=("Inter", 16 * -1)
        )

        entry_image_1 = tk.PhotoImage(file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(497.0, 344.5, image=entry_image_1)
        entry_1 = tk.Entry(self, bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
        entry_1.place(x=272.0, y=323.0, width=450.0, height=41.0)

        placeholders = {
            entry_1: "Enter the function here..."
        }

        def on_focus_in(event):
            entry = event.widget
            placeholder = placeholders.get(entry)
            if placeholder and entry.get() == placeholder:
                entry.delete(0, "end")
                entry.config(fg="#000716")
            
        def on_focus_out(event):
            entry = event.widget
            placeholder = placeholders.get(entry)
            if placeholder and entry.get() == "":
                entry.insert(0, placeholder)
                entry.config(fg="#C0C0C0")

        for entry in placeholders.keys():
            entry.insert(0, placeholders[entry])
            entry.config(fg="#C0C0C0")
            entry.bind("<FocusIn>", on_focus_in)
            entry.bind("<FocusOut>", on_focus_out)

        button_image_1 = tk.PhotoImage(file=relative_to_assets("button_1.png"))
        button_1 = tk.Button(
            self,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.go_to_next_page(),
            relief="flat"
        )
        button_1.place(x=402.0, y=414.0, width=190.0, height=34.0)

        self.button_image_1 = button_image_1

        canvas.pack()


    def go_to_next_page(self):
        intro_page = self.controller.frames["IntroPage"]
        selected_option = intro_page.selected_option
            
        if selected_option == "MCQ":
            self.controller.show_frame("WrongsPage")
        elif selected_option == "FIB":
            self.controller.show_frame("RandomizerPage")
